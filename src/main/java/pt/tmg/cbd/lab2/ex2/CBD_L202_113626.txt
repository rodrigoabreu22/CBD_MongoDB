// NMEC: 113626

// 1. Liste todos os documentos da coleção.

db.restaurants.find()


 // 2. Apresente os campos restaurant_id, nome, localidade e gastronomia para todos os
documentos da coleção.

db.restaurants.find({},{restaurant_id:1, nome:1, localidade:1, gastronomia:1})


// 3. Apresente os campos restaurant_id, nome, localidade e código postal (zipcode), mas
exclua o campo _id de todos os documentos da coleção.

db.restaurants.find({},{restaurant_id:1, nome:1, localidade:1, 'address.zipcode':1, _id:0})


//4. Indique o total de restaurantes localizados no Bronx.

db.restaurants.count({localidade:"Bronx"})


//5. Apresente os primeiros 15 restaurantes localizados no Bronx, ordenados por
ordem crescente de nome.

db.restaurants.find({localidade:"Bronx"}).sort({nome: 1}).limit(15)


// 6. Liste todos os restaurantes que tenham pelo menos um score superior a 85.

db.restaurants.find({grades: {$elemMatch: {score: {$gt:85} } } } )


// 7. Encontre os restaurantes que obtiveram uma ou mais pontuações (score) entre
[80 e 100].

db.restaurants.find({grades: {$elemMatch: {$and: [{score: {$gte: 80}},{score: {$lte: 100}}] } } } )


// 8. Indique os restaurantes com latitude inferior a -95,7.

db.restaurants.find({'address.coord.0':{$lt:-95.7}})


//9. Indique os restaurantes que não têm gastronomia "American", tiveram uma (ou
mais) pontuação superior a 70 e estão numa latitude inferior a -65.

db.restaurants.find({$and: [{gastronomia:{$ne: 'American'}}, {grades: {$elemMatch: {score: {$gt: 70}}}},{'address.coord.0':{$lt:-65}}]})


//10. Liste o restaurant_id, o nome, a localidade e gastronomia dos restaurantes cujo nome
começam por "Wil".

db.restaurants.find({nome: {$regex: /^Wil/}},{restaurant_id:1, nome:1, localidade:1, gastronomia:1})


//11. Liste o nome, a localidade e a gastronomia dos restaurantes que pertencem ao Bronx
e cuja gastronomia é do tipo "American" ou "Chinese".

db.restaurants.find({$and:[{localidade: "Bronx"}, {gastronomia:{$in: ["American", "Chinese"]}}]}, {"nome": 1, "localidade": 1, "gastronomia": 1})


//12. Liste o restaurant_id, o nome, a localidade e a gastronomia dos restaurantes
localizados em "Staten Island", "Queens", ou "Brooklyn".

db.restaurants.find({$or:[{localidade:'Staten Island'}, {localide: 'Queens'}, {localidade:'Brooklyn'}]},{restaurant_id:1, nome:1, localidade:1, gastronomia:1})


//13. Liste o nome, a localidade, o score e gastronomia dos restaurantes que alcançaram
sempre pontuações inferiores ou igual a 3.

db.restaurants.find({'grades.score': {$not: {$gt: 3}}},{nome:1, localidade:1, 'grades.score':1,  gastronomia:1})


//14. Liste o nome e as avaliações dos restaurantes que obtiveram uma avaliação com
um grade "A", um score 10 na data "2014-08-11T00: 00: 00Z" (ISODATE).

db.restaurants.find({grades:{$elemMatch:{date:ISODate('2014-08-11T00:00:00Z'), grade: 'A', score:10}}},{nome:1, grades:1})


//15. Liste o restaurant_id, o nome e os score dos restaurantes nos quais a segunda
avaliação foi grade "A" e ocorreu em ISODATE "2014-08-11T00: 00: 00Z".

db.restaurants.find({'grades.1.date':ISODate('2014-08-11T00:00:00Z'), 'grades.1.grade': 'A'},{restaurant_id:1, nome:1, 'grades.score':1})


//16. Liste o restaurant_id, o nome, o endereço (address) dos restaurantes onde o 2º
elemento da matriz de coordenadas (coord) tem um valor superior a 42 e inferior
ou igual a 52.

db.restaurants.find({$and:[{'address.coord.1':{$gt:42}},{'address.coord.1':{$lt:52}}]},{restaurant_id:1, nome:1, address:1})


//17. Liste nome, gastronomia e localidade de todos os restaurantes ordenando por ordem
crescente da gastronomia e, em segundo, por ordem decrescente de localidade.

db.restaurants.find({},{nome:1, gastronomia:1, localidade:1}).sort({gastronomia:1, localidade:-1}).toArray()


//18. Liste nome, localidade, grade e gastronomia de todos os restaurantes localizados em
Brooklyn que não incluem gastronomia "American" e obtiveram uma classificação
(grade) "A". Deve apresentá-los por ordem decrescente de gastronomia.

db.restaurants.find({ localidade: 'Brooklyn', gastronomia: { $ne: 'American' }, 'grades.grade': 'A' }, { nome: 1, localidade: 1, 'grades.grade': 'A', gastronomia: 1 }).sort({ gastronomia: -1 }).toArray()


//19. Indique o número total de avaliações (numGrades) na coleção.

db.restaurants.aggregate([{$unwind:"$grades"}, {$group:{_id: null,numGrades:{$sum:1}}},{$project:{_id:0, numGrades:1}}])


//20. Apresente o nome e número de avaliações (numGrades) dos 3 restaurante com
mais avaliações.

db.restaurants.aggregate([{$unwind:"$grades"}, {$group:{_id: "$restaurant_id", nome:{$first:"$nome"},numGrades: {$sum:1}}}, {$sort: {numGrades:-1}}, {$limit: 3}])


//21. Apresente o número total de avaliações (numGrades) em cada dia da semana.

db.restaurants.aggregate([{$unwind:"$grades"}, {$group:{_id: {$dayOfWeek: "$grades.date"},numGrades: {$sum:1}}}])


//22. Conte o total de restaurante existentes em cada localidade.

db.restaurants.aggregate([{$group:{_id: "$localidade",numRestaurants: {$sum:1}}}])


//23. Indique os restaurantes que têm gastronomia "Portuguese", o somatório de score é
superior a 50 e estão numa latitude inferior a -60.

db.restaurants.aggregate([{$match:{gastronomia:"Portuguese", 'address.coord.0':{$lt:-60}}},{$unwind: "$grades"},{$group:{_id:"$restaurant_id", nome:{$first:"$nome"},totalScore: {$sum: "$grades.score"}, coord:{$first:"$address.coord.0"}}},{$match: {totalScore: {$gt:50}}},{$project:{_id:0, nome:1, totalScore:1, coord:1}}])


//24. Apresente o número de gastronomias diferentes na rua "Fifth Avenue"

db.restaurants.aggregate([{$match:{'address.rua':'Fifth Avenue'}}, {$group:{_id:"$address.rua", gastronomias:{$addToSet:'$gastronomia'}}},{$project:{_id:0, numGastronomias:{$size:"$gastronomias"}}}])


//25. Apresente o nome e o score médio (avgScore) e número de avaliações (numGrades)
dos restaurantes com score médio superior a 30 desde 1-Jan-2014.

db.restaurants.aggregate([{$unwind:"$grades"},{$match: {"grades.date": { $gte: ISODate("2014-01-01T00:00:00Z") }}},{$group:{_id:"$restaurant_id",nome:{$first: "$nome"}, avgScore:{$avg:"$grades.score"}, numGrades:{$sum:1}}},{$match:{avgScore: {$gt:30}}},{$project:{_id:0, nome:1, avgScore:1, numGrades:1}}])


//26. Apresente nome da rua e o número de restaurantes da rua com mais restaurantes.

db.restaurants.aggregate([{$group:{_id:"$address.rua", numRestaurants:{$sum:1}}},{$sort:{numRestaurants:-1}}, {$limit:1}])


//27. Apresente os cinco edifícios com mais restaurantes e o seu respetivo número de restaurantes.

db.restaurants.aggregate([{$group:{_id:"$address.building", numRestaurants:{$sum:1}}},{$sort:{numRestaurants:-1}}, {$limit:5}])


//28. Apresente a média de score por gastronomia ordenada por ordem decrescente.

db.restaurants.aggregate([{$unwind:"$grades"},{$group: {_id:"$gastronomia", mediaScore:{$avg:"$grades.score"}}},{$sort:{mediaScore:-1}}]).toArray()


//29. Apresente para as 3 ruas com mais restaurantes, o tipo de gastronomia predominante e o número de reataurantes dessa gastronomia.

db.restaurants.aggregate([{$group:{_id: {rua:"$address.rua",gastronomia:"$gastronomia"}, numRestaurants:{$sum:1}}},{$sort:{numRestaurants:-1}},{$group:{_id:"$_id.rua", gastronomia:{$first:"$_id.gastronomia"},numRestaurants:{$sum:"$numRestaurants"}}},{$sort: {numRestaurants:-1}},{$limit:3},{$project:{_id:0,rua:"$_id", gastronomia:1, numRestaurants:1}}])


//30. Apresente o nome e a localidade do restaurante com gastronomia Portuguesa que foi avaliado com um A há menos tempo.

db.restaurants.aggregate([{$unwind:"$grades"},{$match:{gastronomia:"Portuguese", "grades.grade":"A"}},{$sort:{"grades.date":-1}},{$limit:1},{$project:{_id:0,name:"$nome",localidade:"$localidade",gastronomia:"$gastronomia",grade:"$grades.grade"}}])


